.content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  padding-top: 10vh;

  @media (min-width: 500px) {
    padding-top: 0;
    justify-content: center;
  }

  align-items: center;

  /* This element contains overlay components, so it must be position: relative
     or those components will not work correctly. */
  position: relative;

  /* A contained Overlay component scales up when you scroll by this element, so
     we need to ensure we've hidden the resulting overflow or we will end up
     with horrizontal scroll bars */
  overflow: hidden;

  .copy {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: #fff;
    font-size: 150%;
    text-align: center;

    // Elevate copy above other overlays
    z-index: 1;

    h1 {
      margin: 2vh;
      font-size: 4rem;

      @media (min-width: 500px) {
        font-size: 6rem;
      }
    }

    p {
      width: 75%;
      min-width: 300px;
      max-width: 900px;
      line-height: 150%;
      margin: 0;
      padding: 0;
    }

    a,
    a:visited,
    a:hover {
      text-decoration: none;
      font-weight: 400;
      color: #fff;
    }
  }
}

.blur {
  /* TODO: backdrop-filter is not compatible with Firefox */
  backdrop-filter: blur(75px);
}

.backdrop {
  background: url('./header_bg.jpg') center no-repeat;
  background-size: cover;
}

:global {
  [data-aos='transition-out-fade'] {
    transition-property: opacity;
    opacity: 1;

    /* pointer-events: AOS is designed for transitioning elements in. By
       default, it disables pointer events on an element until a transition
       occurs. We're using AOS to transition things out so we reverse this
       behavior (enable pointer events until a transition occurs and then
       disable them). */
    pointer-events: auto !important;

    &.aos-animate {
      opacity: 0;
      pointer-events: none !important;
    }
  }

  [data-aos='transition-out-zoom'] {
    transition-property: transform;
    transform: scale(1);
    pointer-events: auto !important;
    transform-origin: 50% 100%;

    &.aos-animate {
      pointer-events: none !important;
      transform: scale(1.5);
    }
  }
}
